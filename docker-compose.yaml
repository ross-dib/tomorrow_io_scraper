version: '3'

services:

  postgres:
    image: 'postgres'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: &db_user postgres
      POSTGRES_PASSWORD: &db_pw postgres
      POSTGRES_DB: &db_name local_dev
    volumes:
      - "${PWD}/scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql"
      - "pgdata:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 20s
      retries: 20

  tomorrow:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m weather_scraper
    environment:
      PGHOST: &db_host postgres
      PGPORT: &db_port 5432
      PGUSER: *db_user
      PGPASSWORD: *db_pw
      PGDATABASE: *db_name
      LOG_LEVEL: DEBUG
      TOMORROW_API_KEY: ${TOMORROW_API_KEY}
    volumes:
      - "${PWD}/blobs:/tmp/blobs"
    depends_on:
      postgres:
        condition: service_healthy

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    command: jupyter notebook --ip 0.0.0.0 --NotebookApp.token='' --NotebookApp.password='' --allow-root
    ports:
      - "8888:8888"
    environment:
      PGHOST: *db_host
      PGPORT: *db_port
      PGUSER: *db_user
      PGPASSWORD: *db_pw
      PGDATABASE: *db_name
    volumes:
      - "${PWD}/tomorrow_io_analysis.ipynb:/app/tomorrow_io_analysis.ipynb"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata:
